---
import Layout from "../layouts/Layout.astro";

import Heading from "../components/ui/Heading.astro";

import ContactForm from "../components/ContactForm";

import FeaturesGrid from "../components/FeaturesGrid.astro";
import ProductSection from "../components/ProductSection.astro";
import paintbrush from "../assets/paintbrush-big.svg";
import customWebsite from "../assets/custom-website.jpg";
import ProcessTimeline from "../components/ProcessTimeline.astro";
import FormSection from "../components/FormSection.astro";

interface Feature {
	title: string;
}

const features: Feature[] = [
	{
		title: "Design op maat",
	},
	{
		title: "Contactformulier",
	},
	{
		title: "SEO optimalisatie",
	},
	{
		title: "Social media integratie",
	},
	{
		title: "Web analytics",
	},
	{
		title: "Snelle laadtijd",
	},
	{
		title: "Secure Socket Layer (SSL)",
	},
	{
		title: "Responsive design",
	},
];
---

<Layout>
	<ProductSection
		image={customWebsite}
		icon={paintbrush}
		title="One Pager Website"
		subtitle="Perfect voor startups en kleine bedrijven die snel online willen gaan."
	/>
	<FeaturesGrid features={features} />
	<ProcessTimeline />
	<FormSection product="one-pager-website" />
</Layout>

<style>
	.process-section {
		padding: 4rem 0;
		text-align: center;
	}

	.process-timeline {
		position: relative;
		max-width: 800px;
		margin: 3rem auto 0;
		display: flex;
		flex-direction: column;
		gap: 3rem;
		padding-left: 2.5rem;
	}

	@media (min-width: 760px) {
		.process-timeline {
			gap: 5rem;
			padding-left: 3rem;
		}
	}

	.process-timeline::before {
		content: "";
		position: absolute;
		left: calc(1rem + 1px);
		top: 0;
		height: 100%;
		width: 2px;
		background-color: #e5e7eb;
		z-index: -1;
	}

	.process-step {
		position: relative;
		text-align: left;
		opacity: 0;
		transform: translateY(30px);
		transition:
			opacity 0.6s ease-out,
			transform 0.6s ease-out;
		display: flex;
		align-items: flex-start;
	}

	.process-step.animate {
		opacity: 1;
		transform: translateY(0);
	}

	.process-timeline {
		--step-delay: 0.15s;
	}

	.process-step:nth-child(1) {
		transition-delay: calc(var(--step-delay) * 1);
	}
	.process-step:nth-child(2) {
		transition-delay: calc(var(--step-delay) * 2);
	}
	.process-step:nth-child(3) {
		transition-delay: calc(var(--step-delay) * 3);
	}
	.process-step:nth-child(4) {
		transition-delay: calc(var(--step-delay) * 4);
	}

	.step-number {
		flex-shrink: 0;
		width: 2rem;
		height: 2rem;
		background-color: #ff5533;
		color: white;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		font-size: 0.875rem;
		font-weight: 500;
		margin-left: -3rem;
		margin-right: 2rem;
		position: relative;
		z-index: 1;
	}

	.step-number::before {
		display: none; /* Remove the individual line segments */
	}

	.step-content {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.step-content h3 {
		font-size: var(--font-size-heading-md);
		font-weight: 500;
		margin: 0;
	}

	.step-content p {
		color: var(--text-muted);
		line-height: 1.6;
		font-size: var(--font-size-regular);
		margin: 0;
	}

	.form-section {
		background-color: var(--background-light-gray);
	}

	.contactform-container {
		display: flex;
		flex-direction: column;
		@media (width > 760px) {
			padding: 2rem;
		}
		border: 1px solid var(--box-shadow);
		border-radius: 0.5rem;
	}

	@media (min-width: 760px) {
		.contactform-container {
			padding: 4.5rem 3rem;
		}
	}

	:global(.button) {
		margin-inline: auto;
	}

	@media (min-width: 760px) {
		:global(.button) {
			margin-inline: 0;
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		// Process animation
		const observer = new IntersectionObserver(
			(entries) => {
				entries.forEach((entry) => {
					if (entry.isIntersecting) {
						entry.target.classList.add("animate");
					} else {
						entry.target.classList.remove("animate");
					}
				});
			},
			{
				threshold: 0.2,
				rootMargin: "-50px 0px -50px 0px",
			},
		);

		document.querySelectorAll(".process-step").forEach((step) => {
			observer.observe(step);
		});

		// Smooth scrolling
		document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
			anchor.addEventListener("click", (e) => {
				e.preventDefault();
				const href = anchor.getAttribute("href");
				if (href) {
					const targetElement = document.querySelector(href);
					if (targetElement) {
						targetElement.scrollIntoView({
							behavior: "smooth",
							block: "start",
						});
					}
				}
			});
		});
	});
</script>
