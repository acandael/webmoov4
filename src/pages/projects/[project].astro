---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Heading from '../../components/ui/Heading.astro';
import ProjectResults from '../../components/ProjectResults.astro';
import ProjectInfo from '../../components/ProjectInfo.astro';
import { Image } from 'astro:assets';

// In SSR, we need to fetch the project in the component script
const { project: projectSlug } = Astro.params;
let project: CollectionEntry<'projects'> | undefined;
let projectTestimonials: CollectionEntry<'testimonials'>[] = [];

try {
  const projects = await getCollection('projects');
  project = projects.find(p => p.slug === projectSlug);
  
  if (project) {
    // Only fetch testimonials if we found the project
    const allTestimonials = await getCollection('testimonials');
    projectTestimonials = allTestimonials.filter(
      testimonial => testimonial.data.project === project?.slug
    );
  }
} catch (error) {
  console.error('Error fetching project:', error);
}

console.log('Current URL slug:', projectSlug);
console.log('Project found:', !!project);
if (project) {
  console.log('Project details:', {
    slug: project.slug,
    title: project.data.title,
    type: project.data.type
  });
}
---

<Layout>
  {project ? (
    <>
      <section class="section">
        <div class="container">
          <Heading>
            <h1 class="section-title">Project: {project.data.title}</h1>
            <p class="subtitle">{project.data.subtitle}</p>
          </Heading>

          <div class="hero-image">
            <Image 
              src={import(`../../content/images/${project.data['hero-image']}`)} 
              alt={project.data.title}
              width={1200}
              height={800}
              class="hero-image"
            />
          </div>
        </div>
      </section>

      <ProjectInfo project={project} />
      <section class="section">
        <div class="container">
          <div class="project-gallery">
            {project.data.gallery.map((image, index) => (
              <div class={`gallery-item item-${index + 1}`}>
                <Image 
                  src={import(`../../content/images/${image}`)} 
                  alt=""
                  width={800}
                  height={600}
                  class="gallery-image"
                />
              </div>
            ))}
          </div>
        </div>
      </section>
      <ProjectResults project={project} />
      {projectTestimonials.length > 0 && (
        <section class="section testimonial-section background-broken-white">
          <div class="container">
            {projectTestimonials.map((testimonial) => (
              <article class="testimonial">
                <blockquote class="testimonial-text">
                  "{testimonial.data.text}"
                </blockquote>
                <div class="testimonial-author">
                  <Image 
                    src={import(`../../content/images/${testimonial.data.image}`)} 
                    alt={`${testimonial.data.name} avatar`}
                    width={64}
                    height={64}
                    class="author-image"
                  />
                  <div class="author-info">
                    <h3>{testimonial.data.name}</h3>
                    <p>{testimonial.data.role}</p>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </section>
      )}
    </>
  ) : (
    <section class="section">
      <div class="container">
        <Heading>
          <h1 class="section-title">Project niet gevonden</h1>
          <p class="subtitle">Het project dat u zoekt bestaat niet of is niet meer beschikbaar.</p>
        </Heading>
      </div>
    </section>
  )}
</Layout>

<style>
  .container {
  
    display: flex;
    flex-direction: column;
    gap: 2rem;
  
  }

  .project-header {
    max-width: 70ch;
    margin-inline: auto;
  }

  .hero-image {
    margin-inline: calc(var(--container-padding) * -1);
  }

  .hero-image img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  

  .project-gallery {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 300px);
    /* margin-block: 4rem; */
  }

  .gallery-item {
    border-radius: var(--border-radius);
    overflow: hidden;
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Bento grid layout */
  .item-1 {
    grid-column: span 2;
    grid-row: span 2;
  }

  .item-2 {
    grid-column: 3;
    grid-row: 1;
  }

  .item-3 {
    grid-column: 4;
    grid-row: 1;
  }

  .item-4 {
    grid-column: 3 / span 2;
    grid-row: 2;
  }

  @media (max-width: 760px) {
    .project-gallery {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(4, 250px);
    }

    .gallery-item {
      grid-column: 1 !important;
      grid-row: auto !important;
    }
  }

  @media (max-width: 760px) {
    .project-results {
      padding: 2rem;
    }

    .results-grid {
      gap: 2rem;
    }
  }

  .testimonial-section {
  margin-block-start: 0;
  padding-block-start: 0;
  }

  .testimonial {
  max-width: 800px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    text-align: center;
    margin-inline: auto;
  }

  .testimonial-text {
    font-size: var(--font-size-xl);
    line-height: 1.5;
    color: var(--text-body);
    max-width: 65ch;
    margin: 0;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .testimonial-author img {
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    object-fit: cover;
  }

  .author-info {
    text-align: left;

    h3 {
      font-family: var(--ff-accent);
      font-size: var(--font-size-regular);
      font-weight: 600;
      color: var(--text-heading);
      margin-bottom: 0.25rem;
    }

    p {
      font-size: var(--font-size-sm);
      color: var(--text-body);
    }
  }

  @media (max-width: 768px) {
    .testimonial-section {
      padding-block: 4rem;
    }

    .testimonial-text {
      font-size: var(--font-size-lg);
      padding-inline: 1rem;
    }
  }
</style>