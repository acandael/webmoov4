---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Heading from '../../components/ui/Heading.astro';
import ProjectResults from '../../components/ProjectResults.astro';
import ProjectInfo from '../../components/ProjectInfo.astro';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { project: project.slug },
    props: { project },
  }));
}

interface Props {
  project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;


// Get testimonials for this project
const allTestimonials = await getCollection('testimonials');
const projectTestimonials = allTestimonials.filter(
  testimonial => testimonial.data.project === project.slug
);

console.log('Project slug:', project.slug);
console.log('Found testimonials:', projectTestimonials);
---

<Layout>
  <section class="section">
  <div class="container">
      <Heading>
        <h1 class="section-title">Project: {project.data.title}</h1>
      <p class="subtitle">{project.data.subtitle}</p>
      </Heading>

    <div class="hero-image">
      <img src={`/src/content/images/${project.data['hero-image']}`} alt={project.data.title} />
    </div>
   </div>
</section>

<ProjectInfo project={project} />
 <section class="section">
  <div class="container">
    <div class="project-gallery">
      {project.data.gallery.map((image, index) => (
        <div class={`gallery-item item-${index + 1}`}>
          <img src={`/src/content/images/${image}`} alt="" />
        </div>
      ))}
    </div>

  </div>
 </section>
<ProjectResults project={project} />
{projectTestimonials.length > 0 && (
  <section class="section testimonial-section background-broken-white">
    <div class="container">
      {projectTestimonials.map((testimonial) => (
        <article class="testimonial">
          <blockquote class="testimonial-text">
            "{testimonial.data.text}"
          </blockquote>
          <div class="testimonial-author">
            <img src={`/src/content/images/${testimonial.data.image}`} alt={`${testimonial.data.name} avatar`} />
            <div class="author-info">
              <h3>{testimonial.data.name}</h3>
              <p>{testimonial.data.role}</p>
            </div>
          </div>
        </article>
      ))}
    </div>
  </section>
)}
</Layout>

<style>
  .container {
  
    display: flex;
    flex-direction: column;
    gap: 2rem;
  
  }

  .project-header {
    max-width: 70ch;
    margin-inline: auto;
  }

  .hero-image {
    margin-inline: calc(var(--container-padding) * -1);
  }

  .hero-image img {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  

  .project-gallery {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 300px);
    /* margin-block: 4rem; */
  }

  .gallery-item {
    border-radius: var(--border-radius);
    overflow: hidden;
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Bento grid layout */
  .item-1 {
    grid-column: span 2;
    grid-row: span 2;
  }

  .item-2 {
    grid-column: 3;
    grid-row: 1;
  }

  .item-3 {
    grid-column: 4;
    grid-row: 1;
  }

  .item-4 {
    grid-column: 3 / span 2;
    grid-row: 2;
  }

  @media (max-width: 760px) {
    .project-gallery {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(4, 250px);
    }

    .gallery-item {
      grid-column: 1 !important;
      grid-row: auto !important;
    }
  }

  @media (max-width: 760px) {
    .project-results {
      padding: 2rem;
    }

    .results-grid {
      gap: 2rem;
    }
  }

  .testimonial-section {
  margin-block-start: 0;
  padding-block-start: 0;
  }

  .testimonial {
  max-width: 800px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    text-align: center;
    margin-inline: auto;
  }

  .testimonial-text {
    font-size: var(--font-size-xl);
    line-height: 1.5;
    color: var(--text-body);
    max-width: 65ch;
    margin: 0;
  }

  .testimonial-author {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .testimonial-author img {
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    object-fit: cover;
  }

  .author-info {
    text-align: left;

    h3 {
      font-family: var(--ff-accent);
      font-size: var(--font-size-regular);
      font-weight: 600;
      color: var(--text-heading);
      margin-bottom: 0.25rem;
    }

    p {
      font-size: var(--font-size-sm);
      color: var(--text-body);
    }
  }

  @media (max-width: 768px) {
    .testimonial-section {
      padding-block: 4rem;
    }

    .testimonial-text {
      font-size: var(--font-size-lg);
      padding-inline: 1rem;
    }
  }
</style>